/* Title: hw1_1.cpp
 * Abstract: This program accepts an input array and returns it sorted
 * with repetitions removed.
 *         
 * Author: Colin Reed
 * ID: 1234
 * Date: 04/29/2020
 * HackerRank: https://www.hackerrank.com/contests/cst370-su20-hw0/challenges/370-hw0-1/submissions/code/1323171837
 */

#include <iostream>
using namespace std; 

int main() 
{
	// First input the number of values in the array
	int length; 

	cin >> length; 

	// Accept array value inputs. 
	int arr[length];
	int input;

	for(int i=0; i<length;i++) {
		cin >> input;
		arr[i] = input; 
	};	

	cout << endl << endl;	

	// Sorting start
	int swap;

	for(int i=0; i<length; i++) {
		for (int j=0; j<length-i; j++) {
			if( arr[j] > arr[j+1]) {
				swap = arr[j+1];
				arr[j+1] = arr[j];
				arr[j] = swap;
			}
		}
	}
	// Sorting end

	// Removing duplicates 
	int count=0;
	bool store[length];
	for(int i=0; i<length;i++) {
		if(arr[i]==arr[i+1]){
			count++;
			store[i] = true;
		 } else store[i] = false;
	}
	
	int out[length-count];
	
	int place=0;
	for (int i=0; i<length; i++) {
		if(!store[i]) {
			out[place] =  arr[i];
			place++;
		} 
	}

	for (int j=0; j<length-count;j++) {
		cout << out[j] << endl;
	}
	
	return 0; 
} 
/* Title: hw1_1.cpp
 * Abstract: This program accepts an input array and returns it sorted
 * with repetitions removed.
 *         
 * Author: Colin Reed
 * ID: 1234
 * Date: 04/29/2020
 * HackerRank: https://www.hackerrank.com/contests/cst370-su20-hw0/challenges/370-hw0-1/submissions/code/1323171837
 */

#include <iostream>
using namespace std; 

int main() 
{
	// Creating Variables and collecting arrays
	int length; 
	int length2;

	cin >> length; 

	int arr[length];
	int arr2[length2];
	int input;

	for(int i=0; i<length;i++) {
		cin >> input;
		arr[i] = input; 
	};	

	cout << endl << endl;	
	
	cin >> length2;
	for(int i=0; i<length2;i++) {
		cin >> input;
		arr2[i] = input;
	}

	// Sorting start
	int swap;

	for(int i=0; i<length; i++) {
		for (int j=0; j<length-i; j++) {
			if( arr[j] > arr[j+1]) {
				swap = arr[j+1];
				arr[j+1] = arr[j];
				arr[j] = swap;
			}
		}
	}
	// Sorting end

	// Removing duplicates 
	int count=0;
	bool store[length];
	for(int i=0; i<length;i++) {
		if(arr[i]==arr[i+1]){
			count++;
			store[i] = true;
		 } else store[i] = false;
	}
	
	int out[length-count];
	
	int place=0;
	for (int i=0; i<length; i++) {
		if(!store[i]) {
			out[place] =  arr[i];
			place++;
		} 
	}

	for (int j=0; j<length-count;j++) {
		cout << out[j] << endl;
	}
	
	return 0; 
}
